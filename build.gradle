import java.nio.file.*

plugins {
    id "java"
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.13"
    id "org.beryx.jlink" version "2.26.0"
}

group "com.jmc"
version "1.1.0"
sourceCompatibility = "17"

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://killerjmc.github.io/jmc-utils/repo" }
}

ext {
    jfoenixVersion = "9.0.10"
    jmcUtilsVersion = "3.4.1"
}

dependencies {
    implementation "com.jfoenix:jfoenix:$jfoenixVersion"
    implementation "com.jmc:jmc-utils:$jmcUtilsVersion"
}

javafx {
    version = "17.0.2"
    modules = ["javafx.controls", "javafx.fxml"]
}

application {
    mainModule = "jfx.login"
    mainClass = "com.jmc.login.LoginApp"
    applicationDefaultJvmArgs = [
        "--add-opens=java.base/java.lang.reflect=com.jfoenix",
        "--add-opens=javafx.base/com.sun.javafx.event=com.jfoenix"
    ]
}

jlink.jpackage {
    // 通过解析group的包名的第二个变量首字母大写作为软件供应商名称
    vendor = project.group.toString().tokenize(".")[1].capitalize()

    // 对Windows应用安装器添加额外操作
    if (org.gradle.internal.os.OperatingSystem.current().windows) {
        installerOptions += ["--win-dir-chooser", "--win-menu", "--win-shortcut", "--win-shortcut-prompt"]
    }

    // 对Linux应用安装器添加额外操作
    if (org.gradle.internal.os.OperatingSystem.current().linux) {
        // 判断系统类型来选择生成包格式
        var isRedHat = Files.readString(Path.of("/proc/version")).contains("Red Hat")
        installerOptions += ["--type", isRedHat ? "rpm" : "deb"]

        installerOptions += ["--linux-shortcut"]
    }
}


